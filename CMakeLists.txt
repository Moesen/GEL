project(GEL)
cmake_minimum_required(VERSION 3.2)
set(CMAKE_CXX_STANDARD 14)

find_package (Threads)

option(Use_GLGraphics "Compile the OpenGL Viewer" ON)
if (Use_GLGraphics)
    find_package(PkgConfig REQUIRED)
    find_package (OpenGL REQUIRED)
    find_package (GLEW REQUIRED)
    pkg_search_module(GLFW REQUIRED glfw3)
    find_package (glfw3 REQUIRED)
    if (APPLE)
        FIND_LIBRARY(COCOA_LIBRARY Cocoa)
	add_compile_definitions(GL_SILENCE_DEPRECATION)
	include_directories(./src/)
	SET(CMAKE_INSTALL_RPATH "@loader_path/")
	SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
    endif (APPLE)
endif (Use_GLGraphics)

if (UNIX)
#find_package (glfw3)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
endif (UNIX)

if(WIN32)
	include_directories(./src/GEL)
	add_definitions(-DGLEW_STATIC)
endif()

include_directories(./src/GEL/GL/include)

aux_source_directory(./src/GEL/GL GL_SRC_LIST)
aux_source_directory(./src/GEL/CGLA CGLA_SRC_LIST)
aux_source_directory(./src/GEL/Geometry GEO_SRC_LIST)
aux_source_directory(./src/GEL/HMesh MSH_SRC_LIST)
if(Use_GLGraphics)
    aux_source_directory(./src/GEL/GLGraphics GLG_SRC_LIST)
endif(Use_GLGraphics)
aux_source_directory(./src/GEL/Util UTL_SRC_LIST)

if(Use_GLGraphics)
    add_library(GEL STATIC ${GL_SRC_LIST} ${CGLA_SRC_LIST} ${GEO_SRC_LIST} ${MSH_SRC_LIST} ${GLG_SRC_LIST} ${UTL_SRC_LIST})
    #add_library(GEL SHARED ${GL_SRC_LIST} ${CGLA_SRC_LIST} ${GEO_SRC_LIST} ${MSH_SRC_LIST} ${GLG_SRC_LIST} ${UTL_SRC_LIST} ./src/GEL/GL/src/glad.c)
    target_link_libraries(GEL Threads::Threads OpenGL::GLU OpenGL::GL GLEW::GLEW ${COCOA_LIBRARY})
    #target_link_libraries(GEL OpenGL::GLU OpenGL::GL ${COCOA_LIBRARY})
    # not right now ...
    #add_subdirectory(./src/demo)
else(Use_GLGraphics)
    add_library(GEL SHARED ${CGLA_SRC_LIST} ${GEO_SRC_LIST} ${MSH_SRC_LIST} ${GLG_SRC_LIST} ${UTL_SRC_LIST})
    target_link_libraries(GEL Threads::Threads)
endif(Use_GLGraphics)

include_directories(./src)
aux_source_directory(./src/PyGEL PYG_SRC_LIST)

if(NOT Use_GLGraphics)
    list(REMOVE_ITEM PYG_SRC_LIST "./src/PyGEL/Viewer.cpp")
endif(NOT Use_GLGraphics)

add_library(PyGEL SHARED ${PYG_SRC_LIST})
target_link_libraries(PyGEL GEL ${GLFW_LIBRARIES})

#if(WIN32)
#	add_library(PyGEL SHARED ${PYG_SRC_LIST})
#	target_link_libraries(PyGEL GEL glfw3.lib)
#else()
#	add_library(PyGEL SHARED ${PYG_SRC_LIST})
#	target_link_libraries(PyGEL GEL glfw)
#endif()

